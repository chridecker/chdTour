@using chdTour.DataAccess.Contracts.Interfaces.Repositories.Base
@typeparam TRepo where TRepo : IBaseRepository<T>
@typeparam T where T : class

<div class="entity-table">
    @if (this._isItemVisible)
    {
        <div class="entity-content">
            @ChildContent
        </div>
    }
    <div class="search @(this._isItemVisible  ? " hide " :"")">
        <div class="filter"></div>
        <div class="buttons">
            <IconButton FAClass="plus" OnClick="this.CreateEntity">@this.EntityName hinzufügen</IconButton>
        </div>
        <div class="result">
            <Table Items="this.Items">
                <HeaderContent>
                    @HeaderContent
                    <TableHead></TableHead>
                </HeaderContent>
                <RowTemplate Context="entity">
                    @RowTemplate(entity)
                    <TableData>
                        <IconButton FAClass="open" OnClick="async x => await this.OnEdit.InvokeAsync(entity)" />
                    </TableData>
                </RowTemplate>
            </Table>

        </div>
    </div>
</div>