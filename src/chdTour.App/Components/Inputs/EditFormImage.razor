@using chdTour.App.Components.Base
@using chdTour.DataAccess.Contracts.Domain.Base
@using chdTour.DataAccess.Contracts.Interfaces.Repositories.Base
@typeparam TRepo where TRepo : IBaseRepository<T>
@typeparam T where T : BaseAttachmentEntity<Guid>
@inherits BaseEditFormInput<TRepo, T, byte[]>

<EditFormInput Title="@this.Title">
    <EditFormDisplayAttachment Attachment="this.Value" />
    <InputFile OnChange="LoadFiles" />
</EditFormInput>

@code {
    private bool _isImage => this.Type.StartsWith("image");

    [Parameter] public EventCallback<string> TypeChanged { get; set; }

    [Parameter] public string Type { get; set; }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {

        if (!this.ValidateType(e.File.ContentType))
        {
            return;
        }
        this.Type = e.File.ContentType;
        await this.TypeChanged.InvokeAsync(Type);

        using var stream = e.File.OpenReadStream();
        byte[] buffer = new byte[16 * 1024];
        using var ms = new MemoryStream();
        int read;
        while ((read = await stream.ReadAsync(buffer, 0, buffer.Length)) > 0)
        {
            ms.Write(buffer, 0, read);
        }
        await this.ValueChanged(ms.ToArray());
    }

    private bool ValidateType(string type) => type switch
    {
        "image/png" => true,
        "image/jpeg" => true,
        "application/pdf" => true,
        _ => false
    };
}