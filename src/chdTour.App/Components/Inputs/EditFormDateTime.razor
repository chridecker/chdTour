@using System.Globalization
@using chdTour.App.Components.Base
@using chdTour.DataAccess.Contracts.Interfaces.Repositories.Base
@typeparam TRepo where TRepo : IBaseRepository<T>
@typeparam T where T : class
@typeparam TValue

@inherits BaseEditFormInput<TRepo, T, TValue>

<EditFormInput Title="@this.Title">
    <input type="datetime-local" value="@(this.DateTimeValue())" @onchange="this.Changed" disabled="@this.Disabled" />
</EditFormInput>

@code {
    private async Task Changed(ChangeEventArgs args)
    {
        if (!BindConverter.TryConvertTo<TValue>(args.Value, CultureInfo.InvariantCulture, out var result)) { return; }

        await this.ValueChanged(result);
    }

    protected string DateTimeValue()
    {
        if(base.GetValue() is DateTime datetime)
        {
            return datetime.ToString("yyyy-MM-ddTHH:mm:ss");
        }
        return null;
    }
}